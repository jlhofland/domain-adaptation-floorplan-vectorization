seed: 0
wandb:
  log: True
  dir: /default/
  experiment_name: NONE
  entity: wandb-entity-name
  project: project-name
  weights: False # model-XXXXXX | False
debugger:
  batches: False # number | False
  profiler: SimpleProfiler # SimpleProfiler | AdvancedProfiler | False
  dir: /home/nfs/jlhofland/debugging
  accelerator: False
  batch_tuner: False
  anomaly: False
model:
  name: CubiCasa 
  input_slice: [21, 12, 11]
  loss: UncertaintyLoss 
  weights: True # path | False
  watch: False
  init_weights: True 
optimizer:
  name: adam
  lr: 0.001
  eps: 1e-08
  betas: [0.9, 0.999]
  patience: 10
  factor: 0.5
mmd:
  enable: False
  latent_channels: 512 # 512 | 256
  latent_transformation: nn.AdaptiveMaxPool2d((1, 1)) # nn.AdaptiveMaxPool2d((1, 1)) | nn.AdaptiveMaxPool2d((2, 2)) | nn.AdaptiveMaxPool2d((4, 4))
  lambda_constant: 0.1
  lambda_variable: False # False | number (higher > steeper)
  lambda_adaptive: False # False | True (learnable)
train:
  batch_size: 20
  accumulate_grad_batches: 1 # effective batch size = accumulate_grad_batches * batch_size
  resume: False # path | False
  max_epochs: 400
  precision: medium # highest or medium
  max_time:
    enable: False
    days: 0
    hours: 0
    minutes: 0
  debug:
    enable: False
    print: False
    train_batches: 50 # number | False
    val_batches: 50 # number | False
    test_batches: 50 # number | False
test:
  weights: False # path | False
  data: test_c.txt
  heatmap_threshold: 0.4
  experiment_variable: Lambda (C)
  experiment_measure: self.cfg.mmd.lambda_constant
  exclude_classes:
    enable: False
    rooms: [10] # [10: Garage]
    icons: [8, 9, 10] # [8: Fire Place, 9: Bathtub, 10: Chimney]
dataset:
  name: cubicasa
  num_workers: 4 # 0.5 * threads (max)
  format: txt # lmdb or txt
  augmentations: True
  original_size: True
  persistent_workers: True
  pin_memory: True
  grayscale: False
  overwrite: True
  save_samples: True
  load_samples: True
  scale: False
  image_size: 256
  val_size: False
  files:
    root: /default/
    train: train_hqa_hq.txt
    val: val_hqa_hq.txt
    mmd:
      train: train_c.txt
      val: val_c.txt
    test: 
      d1: test_hqa.txt
      d2: test_hq.txt
      d3: test_c.txt